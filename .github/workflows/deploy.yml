name: Build and Deploy to Server

on:
  push:
    branches: [ main, ci ]
  pull_request:
    branches: [ main ]

env:
    NODE_VERSION: "23.x"
    SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Create deployment package
        run: tar -czf build.tar.gz out/

      - name: Setup SSH private key and passphrase
        env:
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          echo 'echo $SSH_PASSPHRASE' > ~/.ssh_askpass && chmod +x ~/.ssh_askpass
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | DISPLAY=None SSH_ASKPASS=~/.ssh_askpass ssh-add - >/dev/null

      - name: Copy files and deploy
        run: |
          ssh -o StrictHostKeyChecking=no $SERVER_HOST "rm -rf $DEPLOY_PATH/*"
          scp -o StrictHostKeyChecking=no build.tar.gz $SERVER_HOST:$DEPLOY_PATH
          ssh -o StrictHostKeyChecking=no $SERVER_HOST "\
            cd $DEPLOY_PATH && \
            tar -xzf build.tar.gz --strip-components=1 && \
            rm -f build.tar.gz"

    env:
        SERVER_HOST: ${{ secrets.USER }}@${{ secrets.HOST }}
        DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
